[{"/Users/andreferreira/projects/eventos/src/index.js":"1","/Users/andreferreira/projects/eventos/src/App.js":"2","/Users/andreferreira/projects/eventos/src/store/index.js":"3","/Users/andreferreira/projects/eventos/src/view/login/index.js":"4","/Users/andreferreira/projects/eventos/src/view/usuario-novo/index.js":"5","/Users/andreferreira/projects/eventos/src/view/home/index.js":"6","/Users/andreferreira/projects/eventos/src/view/usuario-recupera-senha/index.js":"7","/Users/andreferreira/projects/eventos/src/view/evento-cadastro/index.js":"8","/Users/andreferreira/projects/eventos/src/store/usuarioReducer.js":"9","/Users/andreferreira/projects/eventos/src/config/firebase.js":"10","/Users/andreferreira/projects/eventos/src/components/navbar/index.js":"11","/Users/andreferreira/projects/eventos/src/components/evento-card/index.js":"12","/Users/andreferreira/projects/eventos/src/view/evento-detalhes/index.js":"13"},{"size":201,"mtime":1609339105068,"results":"14","hashOfConfig":"15"},{"size":1325,"mtime":1609607646447,"results":"16","hashOfConfig":"15"},{"size":446,"mtime":1609607702749,"results":"17","hashOfConfig":"15"},{"size":2836,"mtime":1609339105071,"results":"18","hashOfConfig":"15"},{"size":3032,"mtime":1609339105072,"results":"19","hashOfConfig":"15"},{"size":2498,"mtime":1609524330029,"results":"20","hashOfConfig":"15"},{"size":1313,"mtime":1609339105073,"results":"21","hashOfConfig":"15"},{"size":7018,"mtime":1609606951752,"results":"22","hashOfConfig":"15"},{"size":441,"mtime":1609339105069,"results":"23","hashOfConfig":"15"},{"size":395,"mtime":1609339105067,"results":"24","hashOfConfig":"15"},{"size":2567,"mtime":1609524615804,"results":"25","hashOfConfig":"15"},{"size":1311,"mtime":1609601205650,"results":"26","hashOfConfig":"15"},{"size":4760,"mtime":1609606876255,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1bezoqn",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"30"},"/Users/andreferreira/projects/eventos/src/index.js",[],["61","62"],"/Users/andreferreira/projects/eventos/src/App.js",[],"/Users/andreferreira/projects/eventos/src/store/index.js",[],"/Users/andreferreira/projects/eventos/src/view/login/index.js",["63"],"import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport './login.css';\n\nimport firebase from '../../config/firebase';\nimport 'firebase/auth';\nimport { useSelector, useDispatch } from 'react-redux';\n\nfunction Login() {\n    const [email, setEmail] = useState('');\n    const [senha, setSenha] = useState('');\n    const [msgTipo, setMsgTipo] = useState('');\n\n    const dispatch = useDispatch();\n\n    const logar = async () => {\n        try {\n            const retorno = await firebase.auth().signInWithEmailAndPassword(email, senha);\n            setMsgTipo('sucesso');\n            setTimeout(() => {\n                dispatch({ type: 'LOG_IN', usuarioEmail: email });\n            }, 2000);\n        } catch (error) {\n            setMsgTipo('erro');\n        }\n\n        // firebase.auth().signInWithEmailAndPassword(email, senha)\n        //     .then(resultado => {\n        //         setMsgTipo('sucesso');\n\n        //         setTimeout(() => {\n        //             dispatch({ type: 'LOG_IN', usuarioEmail: email });\n        //         }, 2000);\n        //     })\n        //     .catch(erro => {\n        //         setMsgTipo('erro');\n        //     })\n    }\n\n    return (\n        <div className=\"login-content d-flex align-items-center\">\n            { useSelector(state => state.usuarioLogado) > 0 ? <Redirect to='/' /> : null}\n\n            <form className=\"mx-auto\">\n                <div className=\"text-center\">\n                    <i className=\"far fa-smile-wink text-white fa-5x\"></i>\n\n                    <h1 className=\"h3 mb-3 fw-normal text-white font-weight-bold\">Login</h1>\n                </div>\n\n                <input onChange={(e) => setEmail(e.target.value)} type=\"email\" id=\"inputEmail\" className=\"form-control my-2\" placeholder=\"Email\" />\n\n                <input onChange={(e) => setSenha(e.target.value)} type=\"password\" id=\"inputPassword\" className=\"form-control my-2\" placeholder=\"Senha\" />\n\n                <button onClick={logar} className=\"w-100 btn btn-lg btn-primary btn-block btn-login\" type=\"button\">Logar</button>\n\n                <div className=\"msg-login text-white text-center my-5\">\n                    {msgTipo === 'sucesso' && <span><strong>WOW!</strong> Vocês está conectado ! &#128526; </span>}\n                    {msgTipo === 'erro' && <span><strong>Ops!</strong> Verifique se a senha ou o usuário estão conectados ! &#128546; </span>}\n                </div>\n\n                <div className=\"opcoes-login text-center mt-5\">\n                    <Link to=\"/usuariorecuperarsenha\" className=\"mx-2\">Recuperar Senha</Link>\n                    <span className=\"text-white\">&#9733;</span>\n                    <Link to=\"/novousuario\" className=\"mx-2\">Quero Cadastrar</Link>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default Login;","/Users/andreferreira/projects/eventos/src/view/usuario-novo/index.js",[],"/Users/andreferreira/projects/eventos/src/view/home/index.js",["64"],"import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport firebase from '../../config/firebase';\nimport './home.css';\n\nimport NavBar from '../../components/navbar';\nimport EventoCard from '../../components/evento-card';\n\nfunction Home({ match }) {\n    const [eventos, setEventos] = useState([]);\n    const [pesquisa, setPesquisa] = useState('');\n    let listaEventos = [];\n    const usuarioEmail = useSelector(state => state.usuarioEmail);\n\n    useEffect(() => {\n        if (match.params.parametro) {\n            firebase.firestore().collection('eventos')\n                .where('usuario', '==', usuarioEmail)\n                .get()\n                .then(async (resultado) => {\n                    await resultado.docs.forEach(doc => {\n                        if (doc.data().titulo.indexOf(pesquisa) >= 0) {\n                            listaEventos.push({\n                                id: doc.id,\n                                ...doc.data()\n                            });\n                        }\n                    })\n\n                    setEventos(listaEventos);\n                });\n        } else {\n            firebase.firestore().collection('eventos').get()\n                .then(async (resultado) => {\n                    await resultado.docs.forEach(doc => {\n                        if (doc.data().titulo.indexOf(pesquisa) >= 0) {\n                            listaEventos.push({\n                                id: doc.id,\n                                ...doc.data()\n                            });\n                        }\n                    })\n\n                    setEventos(listaEventos);\n                });\n        }\n\n    }, [pesquisa]);\n\n    return (\n        <>\n            <NavBar />\n\n\n            <div className=\"row p-3\">\n                <div className=\"row my-3 px-5\">\n                    <h2 className=\"text-center pb-2\">Eventos Publicados</h2>\n                    <input onChange={(e) => setPesquisa(e.target.value)} type=\"text\" className=\"form-control text-center\" placeholder=\"Pesquisar evento pelo títutlo\" />\n                </div>\n\n                <div className=\"row p-3\">\n                    {\n                        eventos.map(item =>\n                            <EventoCard key={item.id} id={item.id} img={item.foto} titulo={item.titulo} detalhes={item.detalhes} visualizacoes={item.visualizacoes} />)\n                    }\n                </div>\n\n            </div>\n        </>\n    );\n}\n\nexport default Home;","/Users/andreferreira/projects/eventos/src/view/usuario-recupera-senha/index.js",[],"/Users/andreferreira/projects/eventos/src/view/evento-cadastro/index.js",["65","66","67"],"import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport './evento-cadastro.css';\n\nimport firebase from '../../config/firebase';\nimport NavBar from '../../components/navbar';\n\nfunction EventoCadastro(props) {\n    const idEvento = props.match.params.id;\n\n    const [carregando, setCarregando] = useState('');\n    const [msgTipo, setMsgTipo] = useState('');\n    const [titulo, setTitulo] = useState('');\n    const [tipo, setTipo] = useState('');\n    const [detalhes, setDetalhes] = useState('');\n    const [data, setData] = useState('');\n    const [hora, setHora] = useState('');\n\n    const [fotoAtual, setfotoAtual] = useState();\n    const [fotoNova, setfotoNova] = useState();\n\n    const usuarioEmail = useSelector(state => state.usuarioEmail);\n\n    const storage = firebase.storage();\n    const db = firebase.firestore();\n\n    useEffect(() => {\n        if (idEvento) {\n            firebase.firestore().collection('eventos').doc(idEvento).get()\n            .then(resultado => {\n                const dado = resultado.data();\n                setTitulo(dado.titulo);\n                setTipo(dado.tipo);\n                setDetalhes(dado.detalhes);\n                setData(dado.data);\n                setHora(dado.hora);\n                setfotoAtual(dado.foto);\n            });\n        }\n    }, []);\n\n    function atualizar() {\n        setMsgTipo('');\n        setCarregando(1);\n\n        if (fotoNova)\n            storage.ref(`imagens/${fotoNova.name}`).put(fotoNova)\n\n        db.collection('eventos').doc(idEvento).update({\n            titulo: titulo,\n            tipo: tipo,\n            detalhes: detalhes,\n            data: data,\n            hora: hora,\n            foto: fotoNova ? fotoNova.name : fotoAtual\n        })\n            .then(() => {\n                setMsgTipo('sucesso');\n                setCarregando(0);\n            })\n            .catch(erro => {\n                setMsgTipo('erro');\n                setCarregando(0);\n            });\n    }\n\n    function cadastrar() {\n        setMsgTipo('');\n        setCarregando(1);\n\n        storage.ref(`imagens/${fotoNova.name}`).put(fotoNova)\n            .then(() => {\n                db.collection('eventos').add({\n                    titulo,\n                    tipo,\n                    detalhes,\n                    data,\n                    hora,\n                    usuario: usuarioEmail,\n                    visualizacoes: 0,\n                    foto: fotoNova.name,\n                    publico: 1,\n                    criaca: new Date()\n                })\n                    .then(() => {\n                        setMsgTipo('sucesso');\n                        setCarregando(0);\n                    })\n                    .catch(erro => {\n                        setMsgTipo('erro');\n                        setCarregando(0);\n                    });\n            });\n\n    }\n\n    return (\n        <>\n            <NavBar />\n            <div className=\"row m-2\">\n                <div className=\"row\">\n                    <h3 className=\"mx-auto font-weight-bold\">\n                        {\n                            idEvento ?\n                                'Atualizar Evento'\n                                :\n                                'Novo Evento'\n                        }\n                    </h3>\n                </div>\n\n                <form>\n                    <div className=\"form-group\">\n                        <label>Título:</label>\n                        <input onChange={(e) => setTitulo(e.target.value)} type=\"test\" className=\"form-control\" value={titulo && titulo} />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Tipo de Evento:</label>\n                        <select onChange={(e) => setTipo(e.target.value)} className=\"form-control\" value={tipo && tipo} >\n                            <option disabled selected value>-- Selecione um tipo --</option>\n                            <option>Festa</option>\n                            <option>Teatro</option>\n                            <option>Show</option>\n                            <option>Evento</option>\n                        </select>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Descrição do evento:</label>\n                        <textarea onChange={(e) => setDetalhes(e.target.value)} className=\"form-control\" rows=\"3\" value={detalhes && detalhes} />\n                    </div>\n\n                    <div className=\"form-group row\">\n                        <div className=\"col-6\">\n                            <label>Data:</label>\n                            <input onChange={(e) => setData(e.target.value)} type=\"date\" className=\"form-control\" value={data && data} />\n                        </div>\n\n                        <div className=\"col-6\">\n                            <label>Hora:</label>\n                            <input onChange={(e) => setHora(e.target.value)} type=\"time\" className=\"form-control\" value={hora && hora} />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Upload da foto: {idEvento && '(caso queira manter a mesma foto, não precisa escolher uma nova imagem)'}</label>\n                        <input onChange={(e) => setfotoNova(e.target.files[0])} type=\"file\" className=\"form-control\" />\n                    </div>\n\n                    <div className=\"row\">\n                        {\n                            carregando > 0\n                                ? <div className=\"spinner-border text-danger mx-auto\" role=\"status\"><span className=\"visually-hidden\">Loading...</span></div>\n                                : <button onClick=\n                                    {\n                                        idEvento ?\n                                            atualizar\n                                            :\n                                            cadastrar\n                                    }\n\n                                    type=\"button\" className=\"btn btn-lg btn-block mt-3 btn-cadastro\">\n                                    {\n                                        idEvento ?\n                                            'Atualizar evento'\n                                            :\n                                            'Publicar evento'\n                                    }\n                                </button>\n                        }\n                    </div>\n\n                </form>\n\n                <div className=\"msg-login text-center mt-2\">\n                    {msgTipo === 'sucesso' && <span><strong>WOW!</strong> Evento publicado ! &#128526; </span>}\n                    {msgTipo === 'erro' && <span><strong>Ops!</strong> Não foi possível publicar o evento ! &#128546; </span>}\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default EventoCadastro;","/Users/andreferreira/projects/eventos/src/store/usuarioReducer.js",[],"/Users/andreferreira/projects/eventos/src/config/firebase.js",[],"/Users/andreferreira/projects/eventos/src/components/navbar/index.js",["68"],"import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport './navbar.css';\nimport { useSelector, useDispatch } from 'react-redux';\n\nfunction NavBar() {\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    return (\n        <nav className=\"navbar navbar-expand-lg\">\n            <div className=\"container-fluid\">\n                <i className=\"far fa-smile-wink text-white fa-2x\"></i>\n\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <i className=\"fas fa-bars text-white\"></i>\n\n                </button>\n\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/\">Home</Link>\n                        </li>\n\n                        {useSelector(state => state.usuarioLogado) > 0 ?\n\n                            <>\n                                <li className=\"nav-item\">\n                                    <Link className=\"nav-link\" to=\"/eventos/meus\">Meus Eventos</Link>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <Link className=\"nav-link\" to=\"/eventocadastro\">Publicar Evento</Link>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <a className=\"nav-link\" onClick={() => {\n                                        dispatch({ type: 'LOG_OUT' });\n                                        history.push('/login');\n                                    }}>Sair</a>\n                                </li>\n                            </>\n                            :\n                            <>\n                                <li className=\"nav-item\">\n                                    <Link className=\"nav-link\" to=\"/novousuario\">Cadastrar</Link>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <Link className=\"nav-link\" to=\"/login\">Login</Link>\n                                </li>\n                            </>\n                        }\n                    </ul>\n\n                </div>\n            </div>\n        </nav >\n    );\n}\n\nexport default NavBar;","/Users/andreferreira/projects/eventos/src/components/evento-card/index.js",["69"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './evento-card.css';\nimport firebase from '../../config/firebase';\n\nfunction EventoCard({ id, img, titulo, detalhes, visualizacoes }) {\n    const [urlImagem, setUrlImagem] = useState();\n\n    useEffect(() => {\n        firebase.storage().ref(`imagens/${img}`).getDownloadURL()\n            .then(url => setUrlImagem(url));\n    }, [urlImagem]);\n\n    return (\n        <div className=\"cad-content col-md-3 col-sm-12\">\n            <img src={urlImagem} className=\"card-img-top img-cartao\" alt=\"Baner do Evento\" />\n\n            <div className=\"card-body\">\n                <h5>{titulo}</h5>\n                <p className=\"card-text text-justify\">\n                    {detalhes}\n                </p>\n\n                <div className=\"row rodape-card d-flex align-item-center\">\n                    <div className=\"col-6\">\n                        <Link to={'/eventodetalhes/' + id} className=\"btn btn-sm btn-detalhes\"> + Detalhes</Link>\n                    </div>\n\n                    <div className=\"col-6 text-right\">\n                        <i className=\"fas fa-eye\"></i> <span>{visualizacoes}</span>\n                    </div>\n\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default EventoCard;","/Users/andreferreira/projects/eventos/src/view/evento-detalhes/index.js",["70","71","72"],"import React, { useEffect, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport './evento-detalhes.css';\n\nimport firebase from '../../config/firebase';\nimport { useSelector } from 'react-redux';\n\nimport NavBar from '../../components/navbar';\n\nexport default function EventoDetalhes(props) {\n    const [evento, setEvento] = useState({});\n    const [urlImg, setUrlImg] = useState();\n    const [carregando, setcarregando] = useState(1);\n    const [excluido, setexcluido] = useState(0);\n\n    const usuarioLogado = useSelector(state => state.usuarioEmail);\n\n    useEffect(() => {\n        firebase.firestore().collection('eventos').doc(props.match.params.id).get()\n            .then(resultado => {\n                let dado = resultado.data();\n                dado.visualizacoes++;\n                setEvento(dado);\n\n                firebase.firestore().collection('eventos').doc(props.match.params.id)\n                    .update('visualizacoes', dado.visualizacoes);\n\n                firebase.storage().ref(`imagens/${dado.foto}`).getDownloadURL()\n                    .then(url => {\n                        setUrlImg(url);\n                        setcarregando(0);\n                    });\n            });\n    }, []);\n\n    function remover() {\n        firebase.firestore().collection('eventos').doc(props.match.params.id).delete()\n            .then(resultado => setexcluido(1))\n    }\n\n    return (\n        <>\n            { excluido > 0 ? <Redirect to='/' /> : null}\n\n            <NavBar />\n            <div className=\"container-fluid\">\n                {\n                    carregando\n                        ?\n                        <div className=\"row mt-5\"><div className=\"spinner-border text-danger mx-auto\" role=\"status\"><span className=\"visually-hidden\">Loading...</span></div></div>\n                        :\n                        <div>\n                            <div className=\"row\">\n                                <div className=\"row\">\n                                    <img src={urlImg} className=\"img-banner\" alt=\"Banner\" />\n\n                                    <div className=\"col-12 text-right mt-1 visualizacoes\">\n                                        <i className=\"fas fa-eye\"></i> <span>{evento.visualizacoes}</span>\n                                    </div>\n\n                                    <h3 className=\"text-center mt-5 titulo\"><strong>{evento.titulo}</strong></h3>\n                                </div>\n\n\n                                <div className=\"row mt-5 d-flex justify-content-around\">\n                                    <div className=\"col-md-3 col-sm-12 box-info p-3 my-2\">\n                                        <i className=\"fas fa-ticket-alt fa-2x\"></i>\n                                        <h5><strong>Tipo</strong></h5>\n                                        <span className=\"mt-3\">{evento.tipo}</span>\n                                    </div>\n\n                                    <div className=\"col-md-3 col-sm-12 box-info p-3 my-2\">\n                                        <i className=\"fas fa-calendar-alt fa-2x\"></i>\n                                        <h5><strong>Data</strong></h5>\n                                        <span className=\"mt-3\">{evento.data}</span>\n                                    </div>\n\n                                    <div className=\"col-md-3 col-sm-12 box-info p-3 my-2\">\n                                        <i className=\"fas fa-clock fa-2x\"></i>\n                                        <h5><strong>Hora</strong></h5>\n                                        <span className=\"mt-3\">{evento.hora}</span>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"row box-detalhes mt-5\">\n                                <h5 className=\"text-center\"><strong>Detalhes do evento</strong></h5>\n                                <p className=\"text-justify p-3\">{evento.detalhes}</p>\n                            </div>\n\n                            {\n                                (usuarioLogado == evento.usuario) &&\n                                <Link to={`/editarevento/${props.match.params.id}`} className=\"btn-editar\"><i className=\"fas fa-pen-square fa-3x\"></i></Link>\n                            }\n\n                            {\n                                (usuarioLogado == evento.usuario) &&\n                                <button onClick={remover} type=\"button\" className=\"btn btn-lg btn-block mt-3 btn-cadastro\">\n                                    Remover Evento\n                                </button>\n                            }\n                        </div>\n                }\n            </div>\n        </>\n    );\n}",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":18,"column":19,"nodeType":"79","messageId":"80","endLine":18,"endColumn":26},{"ruleId":"81","severity":1,"message":"82","line":48,"column":8,"nodeType":"83","endLine":48,"endColumn":18,"suggestions":"84"},{"ruleId":"77","severity":1,"message":"85","line":3,"column":10,"nodeType":"79","messageId":"80","endLine":3,"endColumn":14},{"ruleId":"77","severity":1,"message":"86","line":3,"column":16,"nodeType":"79","messageId":"80","endLine":3,"endColumn":24},{"ruleId":"81","severity":1,"message":"87","line":41,"column":8,"nodeType":"83","endLine":41,"endColumn":10,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":36,"column":37,"nodeType":"91","endLine":39,"endColumn":40},{"ruleId":"81","severity":1,"message":"92","line":12,"column":8,"nodeType":"83","endLine":12,"endColumn":19,"suggestions":"93"},{"ruleId":"81","severity":1,"message":"94","line":34,"column":8,"nodeType":"83","endLine":34,"endColumn":10,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":92,"column":48,"nodeType":"98","messageId":"99","endLine":92,"endColumn":50},{"ruleId":"96","severity":1,"message":"97","line":97,"column":48,"nodeType":"98","messageId":"99","endLine":97,"endColumn":50},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'retorno' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'listaEventos', 'match.params.parametro', and 'usuarioEmail'. Either include them or remove the dependency array.","ArrayExpression",["102"],"'Link' is defined but never used.","'Redirect' is defined but never used.","React Hook useEffect has a missing dependency: 'idEvento'. Either include it or remove the dependency array.",["103"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'img'. Either include it or remove the dependency array.",["104"],"React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["105"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},"Update the dependencies array to be: [listaEventos, match.params.parametro, pesquisa, usuarioEmail]",{"range":"114","text":"115"},"Update the dependencies array to be: [idEvento]",{"range":"116","text":"117"},"Update the dependencies array to be: [img, urlImagem]",{"range":"118","text":"119"},"Update the dependencies array to be: [props.match.params.id]",{"range":"120","text":"121"},[1695,1705],"[listaEventos, match.params.parametro, pesquisa, usuarioEmail]",[1387,1389],"[idEvento]",[427,438],"[img, urlImagem]",[1236,1238],"[props.match.params.id]"]